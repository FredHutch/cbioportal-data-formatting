
#########
# OVARY #
#########

# valori da cercare (accession number ovary)
valori_cercati = ["43721463","44211852","44463743","38477717","15553779","44190130","06514376","44497014","44424638","44351344","44506723","35784552","34121699","44459907","44450013","44515153","44589281","44478824","44431567","44301893","35717487","40517757","17812223","28861938","44601664","44524122","44630747","24872392","24067175","44120459","44861920","44547453","44664159","06790737","44672103","44259216","25291360","43821495","44701316","18607838","10039915","44768133","18846741","30945448","44516557","44770329","43931989","21388921","44312106","31889223","44464055","44145712","17596685","45131364","44069888","44389955","44090058","45069283","44405603","45006913","44838407","44259216","33522988","44017226","05339932","39559109","44893865","31584410","04570594","05562590","44958239","44595767","44411866","44892750","44803682","45012309","45071370","45042637","44844892","44946200","23380975","44105419","43924091","19965953","45080165","44990612","44034593","25652900","44838928","45134079","45036910","44780146","06467096","45078581","45207180","45039906","45144151","44990745","25685660","45099033","11829504","02131126","45325966","45311198","07725906","10276012","40412405","45364072","45299252","44422426","45427259","23539174","21278825","58065970","45379039","45385770","45470200","45262953","04597407","45324928","45480464","45433604","05132865","44581429","45435575","01784511","45108891","43926450","33111931","43380450","27445741","45489689","20192654","26600155","45540184","45456365","44885457","22469654","44827376","33984394","27315043","45295805","45291226","45131919","45143773","04540613","32469678","41215195","44015998","35039619","45456118","45480555","45433547","43771534","07466758","04741914","45556388","45620994","24103160","33144221","45576683","38256525","45628880","45071826","45587243","00913152","45700432","45714334","41401860","39266572","45650637","45416658","45409422","45793163","45651486","45767316","45730199","26254862","45681087","45339546","45735255","45590932","12406054","45630035","33127341","31569742","45501293","45861333","45781382","45071693","45178803","45071693","45071693","44126092","45687357","11761541","45858032","45841442","45868684","45772480","45749942","42374124","34013672","41330150","45801313","45791241","45497864","45814266","43935527","45863560","45768082","45801008","45779444","45817582","39092861","45689908","45968575","45985413","45782885","45567518","40427593","45924271","43324078","46049573","43065556","46089207","46118311","45878634","46085742","46146429","46198628","42507012","46007670","46209573","46032462","45901337","22996334","43708874","32247819","46187498","46265567","46049037","33016486","46166088","23962327","42468017","43657709","46212452","46199824","46209953","45406956","45692399","15551294","11610094","46235289","36682052","45719564","46312583","46295697","46396578","45560067","41136326","45940145","46136024","46125613","46589800","09019449","24780942","45696465","33476433","46250098","46371688","46495461","06638118","46368700","46166070","46625497","46289062","46007530","46501003","46603858","46608394","12552212","43538602","39433982","43881283","43874122","43871789","43883362","34696823","43570043","43939214","43781046","17929191","43904192","43979723","02830164","40201295","43891167","43890839","24558694","25768649","11741105","29453305","31885783","43906270","39584339","30971352","43924141","26137331","41118662","43630896","20650719","44043750","43983535","44033009","43917418","43857648","33709445","44052827","44057917","43918531","44095909","44210938","43848407","38470928","44193332","38103305","15802622","44152601","33232471","44215994","32468373","44051787","44144194","43920024","36282309","44004216","44095883","44003994","43927474","44004000","43990118","44199396","44195238","44198380","26255752","44211225","44153385","19629005","26810200","38271383","44222578","44251270","44343077","44132009","44273886","44262681","44252070","44275212","44226223","44321537","33447418","44359719","16956153","44390573","44203917","23788052","44438174","44344901","37813441","44417236","43868546","04952412","44715324"]

# apre il file tsv in lettura (master_sequencing_file)
with open('/Users/alessiapreziosi/Desktop/cbioportal/master_file.tsv', 'r') as file_tsv:
    # apre il file in cui scrivere le righe trovate
    with open('/Users/alessiapreziosi/Desktop/cbioportal/sample_id_corrispondenti_ovary.tsv', 'w') as nuovo_file:
        # per ogni riga del file tsv
        for riga in file_tsv:
            # divide la riga in una lista di valori
            valori = riga.split('\t')
            print (riga)
            if valori[1] in valori_cercati:
                nuovo_file.write(f"{valori[0]}\t{valori[1]}\t{valori[4]}\t{valori[6]}")
            else:
                # altrimenti continua alla riga successiva senza scrivere nulla
                continue


print ("Fine_ovary!")




########
# LUNG #
########


# valori da cercare (accession number lung)
valori_cercati = ["44683217","44144376","16516171","33671843","04814711","33781808","37963428","45935095","38159190","46188025","45050812","43388446","40012429","39062203","16446684","12801304","40405961","20500302","31153174","41223751","43974518","19185826","06762389","45522851","01180017","44686525","11000841","38915229","46752986","42814129","21193271","26304261","45838240","44461747","24180077","44668473","44516474","46035317","45022621","31869423","45497138","27785161","45733797","42888974","27698216","44900256","43477306","22540397","16818957","26374819","08917460","42244848","35762996","45238128","24337768","13982798","41928896","44581478","23169576","14348528","02997708","16506107","19526995","40265159","45267754","45296944","44334621","43027564","44412443","05437165","09943275","44552917","02415263","03573383","44637320","44524080","15120587","32469546","44593176","00382713","44093003","24636979","23723117","46400396","45943057","38542643","33059023","46448908","46460879","43709187","07433337","43740794","44392520","44656395","44661585","20053146","44662054","44677045","44827822","12115291","46157095","46267555","01407493","46684338","14129647","46788816","46646592","45539848","10437838","34577379","46764890","34653022","40169971","45632007","43750900","30760854","41902966","43806272","43862341","39719802","43652353","26209353","34062521","23078405","43844281","43739622","43622489","24668949","25487737","23588254","43887199","43781137","43875988","39429774","43787548","43857580","20992228","43888528","22206346","22459770","43910702","43721018","43906353","05075478","19127208","43926914","11244696","43950997","08028938","30522320","19406883","01509835","43988526","08574659","43867589","42178624","43957893","43703206","43939156","43978097","39875463","07587447","38351367","12432886","15521446","19282300","04178018","24273989","11115425","43889641","43928209","43980929","35738350","43948165","30047476","44131167","03675477","07672777","11753571","43885490","42079939","01929207","21518840","34176842","42842443","12162707","44151421","44156933","44202083","07248297","20853826","04436499","44071660","33147521","44234672","41243973","44145977","33313479","43992411","38147153","03583648","20760500","29830486","36125730","33461641","09781261","29888468","04184529","44082154","13259395","44464121","44218881","42718866","10353480","44302776","44398311","35396092","20889317","37256666"]

# apre il file tsv in lettura (master_squencing_file)
with open('/Users/alessiapreziosi/Desktop/cbioportal/master_file.tsv', 'r') as file_tsv:
    # apre il file in cui scrivere le righe trovate
    with open('/Users/alessiapreziosi/Desktop/cbioportal/sample_id_corrispondenti_lung.tsv', 'w') as nuovo_file:
        # per ogni riga del file tsv
        for riga in file_tsv:
            # divide la riga in una lista di valori
            valori = riga.split('\t')
            print (riga)
            if valori[1] in valori_cercati:
                nuovo_file.write(f"{valori[0]}\t{valori[1]}\t{valori[4]}\t{valori[6]}")
            else:
                # altrimenti continua alla riga successiva senza scrivere nulla
                continue

print ("Fine_lung!")